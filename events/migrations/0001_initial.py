# Generated by Django 5.2.5 on 2025-08-25 12:58

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('appetizer', 'Vorspeise'), ('main_course', 'Hauptgang'), ('dessert', 'Nachspeise')], max_length=20, verbose_name='Kurs-Name')),
                ('display_name', models.CharField(max_length=50, verbose_name='Anzeigename')),
                ('order', models.PositiveIntegerField(unique=True, verbose_name='Reihenfolge')),
            ],
            options={
                'verbose_name': 'Kurs',
                'verbose_name_plural': 'Kurse',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Event-Name')),
                ('description', models.TextField(help_text='Detaillierte Beschreibung des Events', verbose_name='Beschreibung')),
                ('event_date', models.DateField(verbose_name='Event-Datum')),
                ('registration_start', models.DateTimeField(verbose_name='Anmeldung startet')),
                ('registration_deadline', models.DateTimeField(verbose_name='Anmeldeschluss')),
                ('appetizer_time', models.TimeField(default='18:00', verbose_name='Vorspeise Zeit')),
                ('main_course_time', models.TimeField(default='20:00', verbose_name='Hauptgang Zeit')),
                ('dessert_time', models.TimeField(default='22:00', verbose_name='Nachspeise Zeit')),
                ('max_teams', models.PositiveIntegerField(help_text='Mindestens 3 Teams erforderlich', validators=[django.core.validators.MinValueValidator(3)], verbose_name='Maximale Team-Anzahl')),
                ('team_size', models.PositiveIntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)], verbose_name='Team-Größe')),
                ('groups_per_course', models.PositiveIntegerField(default=3, help_text='Anzahl Teams die zusammen an einem Kurs teilnehmen', validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(6)], verbose_name='Teams pro Kurs')),
                ('price_per_person', models.DecimalField(decimal_places=2, default=Decimal('25.00'), max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Preis pro Person')),
                ('city', models.CharField(max_length=100, verbose_name='Stadt')),
                ('max_distance_km', models.DecimalField(decimal_places=2, default=Decimal('10.00'), help_text='Maximale Entfernung zwischen Kursen', max_digits=5, verbose_name='Maximale Entfernung (km)')),
                ('status', models.CharField(choices=[('planning', 'Planung'), ('registration_open', 'Anmeldung geöffnet'), ('registration_closed', 'Anmeldung geschlossen'), ('optimization_running', 'Optimierung läuft'), ('optimized', 'Optimiert'), ('in_progress', 'Läuft'), ('completed', 'Abgeschlossen'), ('cancelled', 'Abgesagt')], default='planning', max_length=20, verbose_name='Status')),
                ('is_public', models.BooleanField(default=True, help_text='Soll das Event öffentlich sichtbar sein?', verbose_name='Öffentlich')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organized_events', to=settings.AUTH_USER_MODEL, verbose_name='Organisator')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['-event_date'],
            },
        ),
        migrations.CreateModel(
            name='TeamRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Ausstehend'), ('confirmed', 'Bestätigt'), ('waiting_list', 'Warteliste'), ('cancelled', 'Storniert'), ('rejected', 'Abgelehnt')], default='pending', max_length=20, verbose_name='Status')),
                ('preferred_course', models.CharField(blank=True, choices=[('appetizer', 'Vorspeise'), ('main_course', 'Hauptgang'), ('dessert', 'Nachspeise')], help_text='Welchen Kurs würde das Team gerne hosten?', max_length=20, null=True, verbose_name='Bevorzugter Kurs')),
                ('can_host_appetizer', models.BooleanField(default=True, verbose_name='Kann Vorspeise hosten')),
                ('can_host_main_course', models.BooleanField(default=True, verbose_name='Kann Hauptgang hosten')),
                ('can_host_dessert', models.BooleanField(default=True, verbose_name='Kann Nachspeise hosten')),
                ('payment_status', models.CharField(choices=[('pending', 'Ausstehend'), ('paid', 'Bezahlt'), ('refunded', 'Erstattet')], default='pending', max_length=20, verbose_name='Zahlungsstatus')),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_registrations', to='events.event', verbose_name='Event')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_registrations', to='accounts.team', verbose_name='Team')),
            ],
            options={
                'verbose_name': 'Team-Anmeldung',
                'verbose_name_plural': 'Team-Anmeldungen',
                'ordering': ['registered_at'],
                'unique_together': {('event', 'team')},
            },
        ),
    ]
